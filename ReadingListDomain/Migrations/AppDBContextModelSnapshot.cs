// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReadingListDomain.Infrastructure.Database.DBContext;

#nullable disable

namespace ReadingListDomain.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReadingListDomain.Infrastructure.Database.Models.ReadingListModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Immortal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpenResponces")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReadingListCreator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReadingLists");
                });

            modelBuilder.Entity("ReadingListDomain.Infrastructure.Database.Models.StoryInReadingListModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReadingListId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReadingListId");

                    b.ToTable("StoryInReadingListModels");
                });

            modelBuilder.Entity("ReadingListDomain.Infrastructure.Database.Models.StoryInReadingListModel", b =>
                {
                    b.HasOne("ReadingListDomain.Infrastructure.Database.Models.ReadingListModel", "ReadingList")
                        .WithMany("SaveStories")
                        .HasForeignKey("ReadingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReadingList");
                });

            modelBuilder.Entity("ReadingListDomain.Infrastructure.Database.Models.ReadingListModel", b =>
                {
                    b.Navigation("SaveStories");
                });
#pragma warning restore 612, 618
        }
    }
}
